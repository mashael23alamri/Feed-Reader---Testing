/* feedreader.js
 *
 * This is the spec file that Jasmine will read and contains
 * all of the tests that will be run against your application.
 */

/* We're placing all of our tests within the $() function,
 * since some of these tests may require DOM elements. We want
 * to ensure they don't run until the DOM is ready.
 */
$(function() {
  //first test suite...
  //RSS Feeds...
    describe('RSS Feeds', function() {
        //test 1...
        //Make sure allFeeds she's finding out...
        //Make sure allFeeds it's not empty...
        it('are defined', function() {
            expect(allFeeds).toBeDefined();
            expect(allFeeds.length).not.toBe(0);
        });

         //test 2...
         //Make sure there is URL defined ...
         //and that the URL is not empty...
         it("has a URL defined" , () => {
           //Use forEach to pass on all URL...
           allFeeds.forEach(feed => {
             //Check a property URL...
             expect(feed.hasOwnProperty("url")).toBe(true);
             //Make sure it's not empty...
             expect(feed.url).not.toBe('');

           })
         })
         //test 3...
         //Make sure there is names defined ...
         //Make sure it's not empty...
         it("has a names defined" , () => {
           //Use forEach to pass on all names...
           allFeeds.forEach(feed => {
             //Check a property names...
             expect(feed.name).toBeDefined();
             //Make sure it's not empty...
             expect(feed.name.length).not.toBe(0);;

           })
         })
    });

    //second test suite...
    //The menu...
    describe("The menu" , () =>{
         //test 1...
         //Make sure that menu is hidden by default
         it("is hidden by default" , () => {
           expect($('body').hasClass('menu-hidden')).toBe(true);
         })
          //test 2...
          // It tests to make sure that the menu changes...
          //visibility when the menu icon is clicked...
          it("changes visibility when the menu icon is clicked",() => {
            //Using JQuery..
            //Define a variable menuIcon and And assign a value by ID menu-icon-link...
            //References: https://jquery.com/...
            let menuIcon = $('.menu-icon-link');
            //click on menu...
            menuIcon.click();
            //menu is hidden ...
             expect($('body').hasClass('menu-hidden')).toBe(false);
            //click on menu again...
            menuIcon.click();
            //menu is open...
            expect($('body').hasClass('menu-hidden')).toBe(true);
          })

     })
     //third test suite...
     //Initial Entries...
    describe("Initial Entries" , () =>{
         //test 1...
         //Test to make sure the loadFeed function...
         //a single .entry element within the .feed container...
         beforeEach(done =>{
           loadFeed(1, function() {
             done();
           });

         })
          //check that there are elements (have at least a single .entry element within the .feed container)...
         it("have at least a single .entry element within the .feed container", done =>{
           expect($(".feed .entry").length).toBeGreaterThan(0);
           done();
         })
    })
      //fourth test suite...
      //New Feed Selection...
      describe("New Feed Selection" , () =>{
          //test 1...
         //Define two variables...
         let oneFeed , twoFeed;

         beforeEach((done) => {
           // load 1 feed...
           loadFeed(0, () =>{
               // set feed Glance...
               let feed = document.querySelector('.feed');
               oneFeed = feed.innerHTML;
               // load 2 feed  ...
               loadFeed(1, () => {
                   // set feed Glance...
                   feed = document.querySelector('.feed');
                   twoFeed = feed.innerHTML;
                   done();
               });
           });
       });

       //Upload new content when you upload a new feed...
       it('Upload new content when you upload a new feed', (done) => {
           //Make sure that there is different content before and after a new feed is loaded
           expect(oneFeed == twoFeed).toBe(false);
           done();
       });
   });
}());
//References : https://jasmine.github.io/index.html...
